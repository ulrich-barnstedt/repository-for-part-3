{"version":3,"sources":["Backend.js","Components.js","App.js","index.js"],"names":["base","axios","get","then","response","data","id","delete","object","post","Input","content","value","onChange","event","preventDefault","set","target","UserDisplay","person","all","notification","name","number","onClick","window","confirm","Backend","newArray","deletedPerson","splice","indexOf","find","p","Notification","message","useEffect","timer","setTimeout","clearTimeout","className","Error","error","PersonForm","a","alert","newPerson","r","concat","onSubmit","type","Filter","filter","NumberList","filteredList","toLowerCase","includes","map","key","App","stateObject","state","useState","ReactDOM","render","document","getElementById"],"mappings":"oPAEMA,EAAO,eAmBE,EAjBS,WAEpB,OADYC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAe1B,EAZM,SAACC,GAClB,OAAOL,IAAMM,OAAN,UAAgBP,EAAhB,YAAwBM,KAWpB,EAJM,SAACE,GAClB,OAAOP,IAAMQ,KAAKT,EAAMQ,I,QCffE,EAAQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAMpB,OACI,2BAAOC,MAAOD,EAAQC,MAAOC,SANjC,SAAuBC,GACnBA,EAAMC,iBACNJ,EAAQK,IAAIF,EAAMG,OAAOL,WAQpBM,EAAc,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,aAetC,OACI,6BACI,8BAAOF,EAAOG,KAAd,IAAqBH,EAAOI,OAA5B,MACA,4BAAQC,QAjBM,WAClB,GAAKC,OAAOC,QAAP,iBAAyBP,EAAOG,KAAhC,qBAAL,CAIAK,EAAqBR,EAAOb,IAE5B,IAAIsB,EAAQ,YAAOR,EAAIR,OACnBiB,EAAgBD,EAASE,OAAOV,EAAIR,MAAMmB,QAAQX,EAAIR,MAAMoB,MAAK,SAAAC,GAAC,OAAIA,EAAE3B,KAAOa,EAAOb,OAAM,GAChGc,EAAIJ,IAAIY,GAERP,EAAaL,IAAb,+BAAyCa,EAAc,GAAGP,KAA1D,uBAMI,UACA,+BAKCY,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAU3B,OATAC,qBAAU,WACN,IAAMC,EAAQC,YAAW,WACC,OAAlBH,EAAQvB,OACRuB,EAAQnB,IAAI,QAEjB,KACH,OAAO,kBAAMuB,aAAaF,MAC3B,CAACF,IAEkB,OAAlBA,EAAQvB,MACD,KAIP,yBAAK4B,UAAU,gBACVL,EAAQvB,QAKR6B,EAAQ,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAUnB,OATAN,qBAAU,WACN,IAAMC,EAAQC,YAAW,WACD,OAAhBI,EAAM9B,OACN8B,EAAM1B,IAAI,QAEf,KACH,OAAO,kBAAMuB,aAAaF,MAC3B,CAACK,IAEgB,OAAhBA,EAAM9B,MACC,KAIP,yBAAK4B,UAAU,SACVE,EAAM9B,QCrEb+B,EAAa,SAAC,GAAiD,IAAhDxB,EAA+C,EAA/CA,OAAQI,EAAuC,EAAvCA,OAAQD,EAA+B,EAA/BA,KAAMD,EAAyB,EAAzBA,aAAyB,EAAXqB,MAAW,4CAChE,WAA8B5B,GAA9B,eAAA8B,EAAA,yDACI9B,EAAMC,iBAGa,KAAfO,EAAKV,OAA+B,MAAfU,EAAKV,OAAkC,KAAjBW,EAAOX,OAAiC,MAAjBW,EAAOX,MAJjF,uBAKQiC,MAAM,yBALd,0BA2CIxB,EAAaL,IAAb,gBAA0BM,EAAKV,MAA/B,kBAGMkC,EAAY,CACdxB,KAAMA,EAAKV,MACXW,OAAQA,EAAOX,OAEnBU,EAAKN,IAAI,IACTO,EAAOP,IAAI,IAGXW,EAAqBmB,GAAW3C,MAAK,SAAA4C,GACjC5B,EAAOH,IAAIG,EAAOP,MAAMoC,OAAOD,EAAE1C,UAvDzC,4CADgE,sBA4DhE,OACI,6BACI,0BAAM4C,SA9DkD,6CA+DpD,sCACU,kBAAC,EAAD,CAAOtC,QAASW,IACtB,6BAFJ,WAGY,kBAAC,EAAD,CAAOX,QAASY,KAE5B,6BACI,4BAAQ2B,KAAK,UAAb,WAOdC,EAAS,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACb,OACI,2DAC+B,kBAAC,EAAD,CAAOzC,QAASyC,MAKjDC,EAAa,SAAC,GAAoC,IAAnClC,EAAkC,EAAlCA,OAAQiC,EAA0B,EAA1BA,OAAQ/B,EAAkB,EAAlBA,aAC7BiC,EAAenC,EAAOP,MAAMwC,QAAO,SAAAnB,GAAC,OAAIA,EAAEX,KAAKiC,cAAcC,SAASJ,EAAOxC,MAAM2C,kBAEvF,OACI,6BACKD,EAAaG,KAAI,SAAAxB,GACd,OAAO,kBAAC,EAAD,CAAayB,IAAKzB,EAAEX,KAAMH,OAAQc,EAAGb,IAAKD,EAAQE,aAAcA,SAwDxEsC,EAhDH,WACR,SAASC,EAAaC,GAClB,MAAO,CACHjD,MAAQiD,EAAM,GACd7C,IAAM6C,EAAM,IAKpB,IAAM1C,EAASyC,EAAYE,mBAAS,KAG9BxC,EAAOsC,EAAYE,mBAAS,KAC5BvC,EAASqC,EAAYE,mBAAS,KAG9BV,EAASQ,EAAYE,mBAAS,KAG9BzC,EAAeuC,EAAYE,mBAAS,OACpCpB,EAAQkB,EAAYE,mBAAS,OAUnC,OAFA1B,qBALmB,WACfT,IAA0BxB,MAAK,SAAA4C,GAC3B5B,EAAOH,IAAI+B,QAGG,IAGlB,6BACI,yCAEA,kBAAC,EAAD,CAAOL,MAAOA,IACd,kBAAC,EAAD,CAAcP,QAASd,IAEvB,kBAAC,EAAD,CAAQ+B,OAAQA,IAEhB,gDACA,kBAAC,EAAD,CAAYjC,OAAQA,EAAQG,KAAMA,EAAMC,OAAQA,EAAQF,aAAcA,EAAcqB,MAAOA,IAE3F,uCACA,kBAAC,EAAD,CAAYvB,OAAQA,EAAQiC,OAAQA,EAAQ/B,aAAcA,M,MC9ItE0C,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.28c5d92b.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst base = '/api/persons';\r\n\r\nconst fetchAllNumbers = () => {\r\n    const req = axios.get(base);\r\n    return req.then(response => response.data);\r\n}\r\n\r\nconst deleteNumber = (id) => {\r\n    return axios.delete(`${base}/${id}`);\r\n}\r\n\r\nconst updateNumber = (id, object) => {\r\n    return axios.put(`${base}/${id}`, object);\r\n}\r\n\r\nconst createNumber = (object) => {\r\n    return axios.post(base, object);\r\n}\r\n\r\nexport default {fetchAllNumbers, deleteNumber, updateNumber, createNumber}","import React, {useEffect} from 'react'\r\nimport Backend from './Backend'\r\n\r\nexport const Input = ({ content }) => {\r\n    function handleChange (event) {\r\n        event.preventDefault();\r\n        content.set(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <input value={content.value} onChange={handleChange}/>\r\n    )\r\n}\r\n\r\nexport const UserDisplay = ({person, all, notification}) => {\r\n    const deleteHandler = () => {\r\n        if (!window.confirm(`Delete ${person.name} from phonebook?`)) {\r\n            return;\r\n        }\r\n\r\n        Backend.deleteNumber(person.id);\r\n\r\n        let newArray = [...all.value];\r\n        let deletedPerson = newArray.splice(all.value.indexOf(all.value.find(p => p.id === person.id)), 1)\r\n        all.set(newArray);\r\n\r\n        notification.set(`Successfully deleted ${deletedPerson[0].name} from phonebook`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span>{person.name} {person.number}  </span>\r\n            <button onClick={deleteHandler}>Delete</button>\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Notification = ({ message }) => {\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if (message.value !== null) {\r\n                message.set(null);\r\n            }\r\n        }, 5000);\r\n        return () => clearTimeout(timer);\r\n    }, [message]);\r\n\r\n    if (message.value === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"notification\">\r\n            {message.value}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Error = ({error}) => {\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if (error.value !== null) {\r\n                error.set(null);\r\n            }\r\n        }, 5000);\r\n        return () => clearTimeout(timer);\r\n    }, [error]);\r\n\r\n    if (error.value === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {error.value}\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport Backend from './Backend'\r\n\r\n//other subcomponents\r\nimport {Input, UserDisplay, Notification, Error} from './Components'\r\n\r\nconst PersonForm = ({person, number, name, notification, error}) => {\r\n    async function submitHandler (event) {\r\n        event.preventDefault();\r\n\r\n        //check if inputs are empty\r\n        if (name.value === \"\" || name.value === \" \" || number.value === \"\" || number.value === \" \") {\r\n            alert(\"Name/number is empty.\");\r\n            return;\r\n        }\r\n\r\n        /*\r\n        //check if name exists already\r\n        let testArray = person.value.map(p => p.name.toLowerCase());\r\n        if (testArray.includes(name.value.toLowerCase())) {\r\n            if (window.confirm(`${name.value} is already in the phone book. Replace the number with a the new one?`)) {\r\n                //get index of the target person\r\n                let index = person.value.indexOf(person.value.find(p => p.name.toLowerCase() === name.value.toLowerCase()));\r\n\r\n                //update the backend\r\n                let failed = false;\r\n                await Backend.updateNumber(person.value[index].id, {...person.value[index], number: number.value}).catch((e) => {\r\n                    error.set(\"Could not update person in phonebook. This person might have already been deleted.\");\r\n                    failed = true;\r\n                });\r\n                if (failed === true) {\r\n                    return;\r\n                }\r\n\r\n                //update local list\r\n                let updateList = [...person.value];\r\n                updateList[index].number = number.value;\r\n                person.set(updateList);\r\n\r\n                notification.set(`Updated number of ${name.value}`);\r\n\r\n                name.set(\"\");\r\n                number.set(\"\");\r\n                return;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n         */\r\n\r\n        notification.set(`Added ${name.value} to phonebook`);\r\n\r\n        //generate object\r\n        const newPerson = {\r\n            name: name.value,\r\n            number: number.value\r\n        }\r\n        name.set(\"\");\r\n        number.set(\"\");\r\n\r\n        //add to backend\r\n        Backend.createNumber(newPerson).then(r => {\r\n            person.set(person.value.concat(r.data));\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submitHandler}>\r\n                <div>\r\n                    name: <Input content={name}/>\r\n                    <br />\r\n                    number: <Input content={number}/>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Filter = ({filter}) => {\r\n    return (\r\n        <div>\r\n            show only names containing <Input content={filter}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst NumberList = ({person, filter, notification}) => {\r\n    let filteredList = person.value.filter(p => p.name.toLowerCase().includes(filter.value.toLowerCase()));\r\n\r\n    return (\r\n        <div>\r\n            {filteredList.map(p => {\r\n                return <UserDisplay key={p.name} person={p} all={person} notification={notification}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n//------ Main App Component\r\n\r\nconst App = () => {\r\n    function stateObject (state) {\r\n        return {\r\n            value : state[0],\r\n            set : state[1]\r\n        }\r\n    }\r\n\r\n    //all people in phone book\r\n    const person = stateObject(useState([]));\r\n\r\n    //form hooks\r\n    const name = stateObject(useState(''));\r\n    const number = stateObject(useState(''));\r\n\r\n    //filter hook\r\n    const filter = stateObject(useState(''));\r\n\r\n    //notification and error hook\r\n    const notification = stateObject(useState(null));\r\n    const error = stateObject(useState(null));\r\n\r\n    //effect hook for loading from server\r\n    const effectHook = () => {\r\n        Backend.fetchAllNumbers().then(r => {\r\n            person.set(r);\r\n        })\r\n    }\r\n    useEffect(effectHook, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n\r\n            <Error error={error} />\r\n            <Notification message={notification} />\r\n\r\n            <Filter filter={filter}/>\r\n\r\n            <h3>Add a new number</h3>\r\n            <PersonForm person={person} name={name} number={number} notification={notification} error={error}/>\r\n\r\n            <h3>Numbers</h3>\r\n            <NumberList person={person} filter={filter} notification={notification}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport \"./index.css\"\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}